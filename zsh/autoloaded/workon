# vim:syntax=sh
# vim:filetype=sh

if [ -z $1 ]; then
  printf '%s\n' "Specify project: $0 <project-name>"
  return -1
fi

printf '%s\n' "Checking if environment exists..."

if [ ! -d "${VENV_HOME}/${1}" ]; then
  printf '%s\n' "Virtual environment not located ${VENV_HOME}/${1}"
  printf '%s\n' "Check if the environment is created at ${VENV_HOME}"
  printf '%s\n' "Exiting..."
  return -1
else
  printf '%s\n' "Environment located."
fi

if [ -d "${HOME}/statnett/${1}" ]; then
  dir="statnett"
elif [ -d "${HOME}/nela/${1}" ]; then
  dir="nela"
elif [ -d "${HOME}/projects/${1}" ]; then
  dir="projects"
else
  printf '%s\n' "Unable to locate project directory. "
  printf '%s\n' "Continuing environment activation without defining PROJECT_HOME"
  unset dir
  export unset PROJECT_HOME
fi

printf '%s\n' "Activating enviroment ${VENV_HOME}/${1}"
source ${VENV_HOME}/${1}/bin/activate
printf '%s\n' "Environment ${VENV_HOME}/${1} activated."

if [ ! -z $dir ]; then
  printf '%s\n' "Found project in parent directory: ${dir}"
  PROJECT_HOME="${HOME}/${dir}/${1}"
  printf '%s\n' "PROJECT_HOME set to ${PROJECT_HOME}"
fi

if [ ! -z "${PROJECT_HOME}" ]; then
  printf '\n%s\n' "cd-ing into ${PROJECT_HOME}"
  [ -d ${PROJECT_HOME} ] && cd ${PROJECT_HOME}
  printf '\n%s\n' "Working directory should now be ${PROJECT_HOME}"
fi

---
- name: Create User
  # become: true
  # register: user_created
  ansible.builtin.user:
    name: "{{ setup_user }}"
    shell: /bin/zsh
    create_home: true

    ##################### Backup ###############################

# - name: Get all users
#   ansible.builtin.getent:
#     database: passwd

  #   - name: Check user is present
  #     ansible.builtin.assert:
  #       fail_msg: "Unable to create user {{ setup_user }}"
  #       success_msg: "User {{ setup_user }} successfully created"
  #       that: setup_user in getent_passwd.keys()
  # pre_tasks:
  #   - name: Check zsh status
  #     block:
  #       - name: Which zsh
  #         ansible.builtin.raw: which zsh
  #         register: which
  #       - name: Verify zsh installed
  #         ansible.builtin.assert:
  #           that: which.rc == 0
  #         #   msg: Unable to update apt
  #         # when: zsh_status.failed or package_manager_updated.failed

# - name: Setup SSH
#   block:
#     - name: Create ssh dir
#       ansible.builtin.file:
#         mode: '0644'
#         owner: "{{ setup_user }}"
#         path: "/home/{{ setup_user }}/.ssh"
#         state: directory
#     - name: Generate SSH keypair
#       register: key
#       community.crypto.openssh_keypair:
#         force: true
#         owner: "{{ setup_user }}"
#         path: "/home/{{ setup_user }}/.ssh/id_rsa"
#         type: rsa
#     - name: Add keys
#       # debug:
#       #   var: keys
#       ansible.builtin.shell: |
#         eval "$(ssh-agent -s)" > /dev/null
#         echo '{"SSH_AUTH_SOCK":"'$SSH_AUTH_SOCK'","SSH_AGENT_PID":"'$SSH_AGENT_PID'"}'
#       register: env_vars_stdout

# - name: save to env_vars
#   ansible.builtin.set_fact:
#     env_vars: "{{ env_vars_stdout.stdout }}"
#     ssh_auth_sock: "{{ (env_vars_stdout.stdout | from_json | default({})).SSH_AUTH_SOCK  }}"

# - name: add key to ssh-agent
#   ansible.builtin.command:
#     cmd: "ssh-add /home/{{ setup_user }}/.ssh/id_rsa"
#   environment: "{{ env_vars }}"

# - name: denug
#   debug:
#     var: hostvars

# - name: Upload public key to GitHub
#   become: true
#   ansible.builtin.uri:
#     url: https://api.github.com/user/keys
#     method: POST
#     follow_redirects: all
#     headers:
#       Authorization: "Bearer {{ github_token }}"
#       Content-Type: application/json
#       Accept: application/vnd.github+json
#       X-GitHub-Api-Version: 2022-11-28
#     body:
#       title: "{{ setup_user }}-key"
#       key: "{{ key.public_key }}"
#     body_format: json
#     force_basic_auth: true
#     status_code: 201

# # - name: Init known hosts
# #   block:
# #   - name: Add github to known hosts
# #     ansible.builtin.known_hosts:
# #       path: "/home/{{ setup_user }}/.ssh/known_hosts"
# #       name: "github.com"
# #       key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
# #   - name: "Set {{ setup_user }} as owner of ~/.ssh/known_hosts"
# #     ansible.builtin.file:
# #       path: "/home/{{ setup_user }}/.ssh/known_hosts"
# #       owner: "{{ setup_user }}"
# #
# - name: debug
#   debug:
#     var: env_vars

# - name: debug2
#   debug:
#     var: ssh_auth_sock

# - name: Clone Git directories
#   environment: "{{ env_vars }}"
#   vars:
#     # ansible_user: "{{ setup_user }}"
#     ansible_ssh_common_args: "-o 'IdentityAgent={{ ssh_auth_sock }}"
#   ansible.builtin.git:
#     # accept_hostkey: true
#     accept_newhostkey: true
#     repo: "{{ item.repo }}"
#     dest: "{{ item.dest }}"
#     depth: 1
#     clone: true
#   with_items: "{{ git_repos.all + git_repos.ubuntu }}"
#   # become: true
#   # become_user: "{{ setup_user }}"
